## 数组比vector cpu占用更低
使用数组替代std::vector可能会降低CPU使用率，但这并不是绝对的，取决于具体的应用场景和代码实现。下面是一些可能导致CPU使用率降低的原因：

内存访问模式优化：在某些情况下，使用数组可以更好地利用CPU缓存。因为数组是连续的内存块，而std::vector是动态数组，可能会存在内存碎片。因此，对于某些访问模式，数组可以减少CPU的内存访问次数，从而提高性能。
预取机制：现代CPU具有预取机制，可以提前将即将使用的数据加载到高速缓存中。如果数据在内存中是连续的（如数组），预取机制可以更有效地工作，从而减少CPU等待数据的时间。
编译器优化：编译器可能对数组和std::vector进行不同的优化。在某些情况下，编译器可能无法对std::vector进行完全优化，因为它的大小是动态变化的。而数组的大小是固定的，编译器可以更好地进行优化。
减少内存分配和释放：使用数组可以减少内存分配和释放的次数。std::vector在每次扩容时都会重新分配内存并复制原有数据，这会增加额外的开销。而数组只需要一次分配即可。
然而，这并不意味着在所有情况下使用数组都会降低CPU使用率。有时候使用std::vector可能更高效，例如在使用动态大小的数据结构时，std::vector提供了更好的可扩展性和灵活性。因此，在选择使用数组还是std::vector时，需要根据具体的应用场景和需求进行权衡和测试。
